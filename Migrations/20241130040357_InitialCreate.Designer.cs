// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotatryhard.Data;

#nullable disable

namespace dotatryhard.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241130040357_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("dotatryhard.Models.Match", b =>
                {
                    b.Property<long>("match_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("match_id"));

                    b.Property<string>("cluster")
                        .HasColumnType("longtext");

                    b.Property<short?>("dire_score")
                        .HasColumnType("smallint");

                    b.Property<short?>("duration")
                        .HasColumnType("smallint");

                    b.Property<long?>("match_seq_num")
                        .HasColumnType("bigint");

                    b.Property<short?>("radiant_score")
                        .HasColumnType("smallint");

                    b.Property<long?>("start_time")
                        .HasColumnType("bigint");

                    b.HasKey("match_id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("dotatryhard.Models.Player", b =>
                {
                    b.Property<long>("account_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("account_id"));

                    b.Property<string>("avatarfull")
                        .HasColumnType("longtext");

                    b.Property<string>("loccountrycode")
                        .HasColumnType("longtext");

                    b.Property<string>("personaname")
                        .HasColumnType("longtext");

                    b.HasKey("account_id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("dotatryhard.Models.PlayersMatches", b =>
                {
                    b.Property<long>("account_id")
                        .HasColumnType("bigint");

                    b.Property<long>("match_id")
                        .HasColumnType("bigint");

                    b.Property<string>("ability_0")
                        .HasColumnType("longtext");

                    b.Property<string>("ability_1")
                        .HasColumnType("longtext");

                    b.Property<string>("ability_2")
                        .HasColumnType("longtext");

                    b.Property<string>("ability_3")
                        .HasColumnType("longtext");

                    b.Property<short?>("aghanims_scepter")
                        .HasColumnType("smallint");

                    b.Property<short?>("aghanims_shard")
                        .HasColumnType("smallint");

                    b.Property<short?>("assists")
                        .HasColumnType("smallint");

                    b.Property<short?>("backpack_0")
                        .HasColumnType("smallint");

                    b.Property<short?>("backpack_1")
                        .HasColumnType("smallint");

                    b.Property<short?>("backpack_2")
                        .HasColumnType("smallint");

                    b.Property<short?>("deaths")
                        .HasColumnType("smallint");

                    b.Property<short?>("denies")
                        .HasColumnType("smallint");

                    b.Property<short?>("gold_per_min")
                        .HasColumnType("smallint");

                    b.Property<int?>("hero_damage")
                        .HasColumnType("int");

                    b.Property<int?>("hero_healing")
                        .HasColumnType("int");

                    b.Property<string>("hero_id")
                        .HasColumnType("longtext");

                    b.Property<short?>("hero_level")
                        .HasColumnType("smallint");

                    b.Property<string>("item_0")
                        .HasColumnType("longtext");

                    b.Property<string>("item_1")
                        .HasColumnType("longtext");

                    b.Property<string>("item_2")
                        .HasColumnType("longtext");

                    b.Property<string>("item_3")
                        .HasColumnType("longtext");

                    b.Property<string>("item_4")
                        .HasColumnType("longtext");

                    b.Property<string>("item_5")
                        .HasColumnType("longtext");

                    b.Property<short?>("item_neutral")
                        .HasColumnType("smallint");

                    b.Property<short?>("kills")
                        .HasColumnType("smallint");

                    b.Property<short?>("last_hits")
                        .HasColumnType("smallint");

                    b.Property<byte?>("leaver_status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<short?>("moonshard")
                        .HasColumnType("smallint");

                    b.Property<int?>("net_worth")
                        .HasColumnType("int");

                    b.Property<short?>("player_slot")
                        .HasColumnType("smallint");

                    b.Property<int?>("score")
                        .HasColumnType("int");

                    b.Property<byte?>("team")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("tower_damage")
                        .HasColumnType("int");

                    b.Property<bool>("win")
                        .HasColumnType("tinyint(1)");

                    b.Property<short?>("xp_per_min")
                        .HasColumnType("smallint");

                    b.HasKey("account_id", "match_id");

                    b.HasIndex("match_id");

                    b.ToTable("PlayersMatches");
                });

            modelBuilder.Entity("dotatryhard.Models.PlayersMatches", b =>
                {
                    b.HasOne("dotatryhard.Models.Player", "player")
                        .WithMany("PlayersMatches")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotatryhard.Models.Match", "match")
                        .WithMany("PlayersMatches")
                        .HasForeignKey("match_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("match");

                    b.Navigation("player");
                });

            modelBuilder.Entity("dotatryhard.Models.Match", b =>
                {
                    b.Navigation("PlayersMatches");
                });

            modelBuilder.Entity("dotatryhard.Models.Player", b =>
                {
                    b.Navigation("PlayersMatches");
                });
#pragma warning restore 612, 618
        }
    }
}
